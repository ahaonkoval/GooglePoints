//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Data;
using LinqToDB.DataProvider.SqlServer;
using LinqToDB.Extensions;
using LinqToDB.Mapping;

using Microsoft.SqlServer.Types;

namespace DataModels
{
	/// <summary>
	/// Database       : geolocation
	/// Data Source    : MO-726-001
	/// Server Version : 13.00.4451
	/// </summary>
	public partial class GeolocationDB : LinqToDB.Data.DataConnection
	{
		public ITable<CustomersPositions>       CustomersPositions       { get { return this.GetTable<CustomersPositions>(); } }
		public ITable<DictDistricts>            DictDistricts            { get { return this.GetTable<DictDistricts>(); } }
		public ITable<DictDistrictsCoordinates> DictDistrictsCoordinates { get { return this.GetTable<DictDistrictsCoordinates>(); } }
		public ITable<DictRegions>              DictRegions              { get { return this.GetTable<DictRegions>(); } }
		public ITable<DictSearchEngines>        DictSearchEngines        { get { return this.GetTable<DictSearchEngines>(); } }
		public ITable<DictTradeMarkets>         DictTradeMarkets         { get { return this.GetTable<DictTradeMarkets>(); } }
		public ITable<GoogleCardPoints>         GoogleCardPoints         { get { return this.GetTable<GoogleCardPoints>(); } }
		public ITable<GoogleMarketCoordinates>  GoogleMarketCoordinates  { get { return this.GetTable<GoogleMarketCoordinates>(); } }
		public ITable<GoogleRequestLimit>       GoogleRequestLimit       { get { return this.GetTable<GoogleRequestLimit>(); } }
		public ITable<List>                     Lists                    { get { return this.GetTable<List>(); } }
		public ITable<ListAddress>              ListAddress              { get { return this.GetTable<ListAddress>(); } }
		public ITable<ListStatus>               ListStatus               { get { return this.GetTable<ListStatus>(); } }
		public ITable<OsmPoints>                OsmPoints                { get { return this.GetTable<OsmPoints>(); } }
		public ITable<VCustomerPositions>       VCustomerPositions       { get { return this.GetTable<VCustomerPositions>(); } }

		public GeolocationDB()
		{
			InitDataContext();
		}

		public GeolocationDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();

		#region Table Functions

		#region TSplit

		[Sql.TableFunction(Schema="dbo", Name="t_split")]
		public ITable<TSplitResult> TSplit(string @source, char? @spliter)
		{
			return this.GetTable<TSplitResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@source,
				@spliter);
		}

		public partial class TSplitResult
		{
			public int    id    { get; set; }
			public string value { get; set; }
		}

		#endregion

		#endregion

		#region FreeTextTable

		public class FreeTextKey<T>
		{
			public T   Key;
			public int Rank;
		}

		private static MethodInfo _freeTextTableMethod1 = typeof(GeolocationDB).GetMethod("FreeTextTable", new Type[] { typeof(string), typeof(string) });

		[FreeTextTableExpression]
		public ITable<FreeTextKey<TKey>> FreeTextTable<TTable,TKey>(string field, string text)
		{
			return this.GetTable<FreeTextKey<TKey>>(
				this,
				_freeTextTableMethod1,
				field,
				text);
		}

		private static MethodInfo _freeTextTableMethod2 = 
			typeof(GeolocationDB).GetMethods()
				.Where(m => m.Name == "FreeTextTable" &&  m.IsGenericMethod && m.GetParameters().Length == 2)
				.Where(m => m.GetParameters()[0].ParameterType.IsGenericTypeEx() && m.GetParameters()[0].ParameterType.GetGenericTypeDefinition() == typeof(Expression<>))
				.Where(m => m.GetParameters()[1].ParameterType == typeof(string))
				.Single();

		[FreeTextTableExpression]
		public ITable<FreeTextKey<TKey>> FreeTextTable<TTable,TKey>(Expression<Func<TTable,string>> fieldSelector, string text)
		{
			return this.GetTable<FreeTextKey<TKey>>(
				this,
				_freeTextTableMethod2,
				fieldSelector,
				text);
		}

		#endregion
	}

	[Table(Schema="dbo", Name="customers_positions")]
	public partial class CustomersPositions
	{
		[Column(@"point_id"),             Identity   ] public long         PointId            { get; set; } // bigint
		[Column(@"card_id"),                 Nullable] public long?        CardId             { get; set; } // bigint
		[Column(@"crm_customer_id"),         Nullable] public long?        CrmCustomerId      { get; set; } // bigint
		[Column(@"coordinates"),             Nullable] public SqlGeography Coordinates        { get; set; } // geography
		[Column(@"processing_status"),       Nullable] public string       ProcessingStatus   { get; set; } // varchar(50)
		[Column(@"lat"),                     Nullable] public decimal?     Lat                { get; set; } // decimal(9, 7)
		[Column(@"lng"),                     Nullable] public decimal?     Lng                { get; set; } // decimal(9, 7)
		[Column(@"search_engine_status"),    Nullable] public string       SearchEngineStatus { get; set; } // nvarchar(50)
		[Column(@"search_engine_id"),        Nullable] public int?         SearchEngineId     { get; set; } // int
		[Column(@"formatted_address"),       Nullable] public string       FormattedAddress   { get; set; } // nvarchar(255)
		[Column(@"xml"),                     Nullable] public string       Xml                { get; set; } // xml
		[Column(@"updated"),              NotNull    ] public DateTime     Updated            { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_customers_positions_dict_search_engines
		/// </summary>
		[Association(ThisKey="SearchEngineId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_customers_positions_dict_search_engines", BackReferenceName="customerspositionsdictsearchengines")]
		public DictSearchEngines customerspositionsdictsearchengine { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="dict_districts")]
	public partial class DictDistricts
	{
		[Column(@"district_id"),         PrimaryKey, Identity] public long         DistrictId        { get; set; } // bigint
		[Column(@"potamus_district_id"), Nullable            ] public long?        PotamusDistrictId { get; set; } // bigint
		[Column(@"region_id"),           Nullable            ] public long?        RegionId          { get; set; } // bigint
		[Column(@"name"),                Nullable            ] public string       Name              { get; set; } // nvarchar(255)
		[Column(@"poligon"),             Nullable            ] public SqlGeography Poligon           { get; set; } // geography
		[Column(@"is_centre_region"),    Nullable            ] public bool?        IsCentreRegion    { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_dict_districts_coordinates_dict_districts_BackReference
		/// </summary>
		[Association(ThisKey="DistrictId", OtherKey="DistrictId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DictDistrictsCoordinates> dictdistrictscoordinatesdictdistricts { get; set; }

		/// <summary>
		/// FK_dict_districts_dict_regions
		/// </summary>
		[Association(ThisKey="RegionId", OtherKey="RegionId", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_dict_districts_dict_regions", BackReferenceName="dictdistrictsdictregions")]
		public DictRegions dictdistrictsdictregion { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="dict_districts_coordinates")]
	public partial class DictDistrictsCoordinates
	{
		[Column(@"coordinate_id"), PrimaryKey, Identity] public long     CoordinateId { get; set; } // bigint
		[Column(@"lat"),           Nullable            ] public decimal? Lat          { get; set; } // decimal(18, 7)
		[Column(@"lng"),           Nullable            ] public decimal? Lng          { get; set; } // decimal(18, 7)
		[Column(@"district_id"),   Nullable            ] public long?    DistrictId   { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK_dict_districts_coordinates_dict_districts
		/// </summary>
		[Association(ThisKey="DistrictId", OtherKey="DistrictId", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_dict_districts_coordinates_dict_districts", BackReferenceName="dictdistrictscoordinatesdictdistricts")]
		public DictDistricts dictdistrictscoordinatesdictdistrict { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="dict_regions")]
	public partial class DictRegions
	{
		[Column(@"region_id"),  PrimaryKey, Identity] public long   RegionId  { get; set; } // bigint
		[Column(@"country_id"), Nullable            ] public string CountryId { get; set; } // nvarchar(50)
		[Column(@"name"),       Nullable            ] public string Name      { get; set; } // nvarchar(255)

		#region Associations

		/// <summary>
		/// FK_dict_districts_dict_regions_BackReference
		/// </summary>
		[Association(ThisKey="RegionId", OtherKey="RegionId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DictDistricts> dictdistrictsdictregions { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="dict_search_engines")]
	public partial class DictSearchEngines
	{
		[Column(@"id"),   PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column(@"name"), Nullable            ] public string Name { get; set; } // nvarchar(50)

		#region Associations

		/// <summary>
		/// FK_customers_positions_dict_search_engines_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="SearchEngineId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CustomersPositions> customerspositionsdictsearchengines { get; set; }

		/// <summary>
		/// FK_list_address_search_engines_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="SearchEngineId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ListAddress> listaddresssearchengines { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="dict_trade_markets")]
	public partial class DictTradeMarkets
	{
		[Column(@"market_id"),         PrimaryKey, Identity] public int      MarketId        { get; set; } // int
		[Column(@"potamus_market_id"), Nullable            ] public long?    PotamusMarketId { get; set; } // bigint
		[Column(@"trading_network"),   Nullable            ] public string   TradingNetwork  { get; set; } // nvarchar(50)
		[Column(@"name_short"),        Nullable            ] public string   NameShort       { get; set; } // nvarchar(50)
		[Column(@"address"),           Nullable            ] public string   Address         { get; set; } // nvarchar(500)
		[Column(@"lat"),               Nullable            ] public decimal? Lat             { get; set; } // decimal(9, 7)
		[Column(@"lng"),               Nullable            ] public decimal? Lng             { get; set; } // decimal(9, 7)
		[Column(@"label"),             Nullable            ] public string   Label           { get; set; } // nvarchar(50)
		[Column(),                     Nullable            ] public string   XML             { get; set; } // xml
	}

	[Table(Schema="dbo", Name="google_card_points")]
	public partial class GoogleCardPoints
	{
		[Column(@"google_point_id"),   Identity   ] public long         GooglePointId    { get; set; } // bigint
		[Column(@"card_id"),              Nullable] public long?        CardId           { get; set; } // bigint
		[Column(@"coordinates"),          Nullable] public SqlGeography Coordinates      { get; set; } // geography
		[Column(@"processing_status"),    Nullable] public string       ProcessingStatus { get; set; } // varchar(50)
		[Column(@"lat"),                  Nullable] public decimal?     Lat              { get; set; } // decimal(9, 7)
		[Column(@"lng"),                  Nullable] public decimal?     Lng              { get; set; } // decimal(9, 7)
		[Column(@"google_status"),        Nullable] public string       GoogleStatus     { get; set; } // nvarchar(50)
		[Column(@"formatted_address"),    Nullable] public string       FormattedAddress { get; set; } // nvarchar(255)
		[Column(@"xml"),                  Nullable] public string       Xml              { get; set; } // xml
		[Column(@"updated"),           NotNull    ] public DateTime     Updated          { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="google_market_coordinates")]
	public partial class GoogleMarketCoordinates
	{
		[Column(@"market_google_coordinates_id"), PrimaryKey, Identity] public int      MarketGoogleCoordinatesId { get; set; } // int
		[Column(@"potamus_market_id"),            Nullable            ] public long?    PotamusMarketId           { get; set; } // bigint
		[Column(@"name_short"),                   Nullable            ] public string   NameShort                 { get; set; } // nvarchar(50)
		[Column(@"address"),                      Nullable            ] public string   Address                   { get; set; } // nvarchar(500)
		[Column(@"lat"),                          Nullable            ] public decimal? Lat                       { get; set; } // decimal(9, 7)
		[Column(@"lng"),                          Nullable            ] public decimal? Lng                       { get; set; } // decimal(9, 7)
		[Column(@"label"),                        Nullable            ] public string   Label                     { get; set; } // nvarchar(50)
		[Column(),                                Nullable            ] public string   XML                       { get; set; } // xml
	}

	[Table(Schema="dbo", Name="google_request_limit")]
	public partial class GoogleRequestLimit
	{
		[Column(@"google_request_limit_id"), PrimaryKey, Identity] public long      GoogleRequestLimitId { get; set; } // bigint
		[Column(@"date_request"),            Nullable            ] public DateTime? DateRequest          { get; set; } // date
		[Column(@"limit"),                   Nullable            ] public int?      Limit                { get; set; } // int
	}

	[Table(Schema="dbo", Name="list")]
	public partial class List
	{
		[Column(@"id"),                                                       PrimaryKey,  Identity] public int       Id               { get; set; } // int
		[Column(@"name"),                                                        Nullable          ] public string    Name             { get; set; } // nvarchar(255)
		[Column(@"created"),                                                     Nullable          ] public DateTime? Created          { get; set; } // datetime
		[Column(@"status_id"),                                                NotNull              ] public int       StatusId         { get; set; } // int
		[Column(@"status_change_date", SkipOnInsert=true, SkipOnUpdate=true), NotNull              ] public DateTime  StatusChangeDate { get; set; } // datetime
		[Column(@"description"),                                                 Nullable          ] public string    Description      { get; set; } // text

		#region Associations

		/// <summary>
		/// FK_list_address_list_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ListId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ListAddress> addresses { get; set; }

		/// <summary>
		/// FK_list_list_status
		/// </summary>
		[Association(ThisKey="StatusId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_list_list_status", BackReferenceName="listliststatus")]
		public ListStatus status { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="list_address")]
	public partial class ListAddress
	{
		[Column(@"id"),                   PrimaryKey,  Identity] public long      Id                 { get; set; } // bigint
		[Column(@"lat"),                     Nullable          ] public decimal?  Lat                { get; set; } // decimal(18, 7)
		[Column(@"lng"),                     Nullable          ] public decimal?  Lng                { get; set; } // decimal(18, 7)
		[Column(@"address"),                 Nullable          ] public string    Address            { get; set; } // nvarchar(255)
		[Column(@"formated_address"),        Nullable          ] public string    FormatedAddress    { get; set; } // nvarchar(255)
		[Column(@"processing_status"),       Nullable          ] public string    ProcessingStatus   { get; set; } // nvarchar(50)
		[Column(@"search_engine_id"),     NotNull              ] public int       SearchEngineId     { get; set; } // int
		[Column(@"search_engine_status"),    Nullable          ] public string    SearchEngineStatus { get; set; } // nvarchar(50)
		[Column(@"created"),                 Nullable          ] public DateTime? Created            { get; set; } // datetime
		[Column(@"updated"),                 Nullable          ] public DateTime? Updated            { get; set; } // datetime
		[Column(@"external_key"),            Nullable          ] public string    ExternalKey        { get; set; } // nchar(10)
		[Column(@"list_id"),              NotNull              ] public int       ListId             { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_list_address_list
		/// </summary>
		[Association(ThisKey="ListId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_list_address_list", BackReferenceName="addresses")]
		public List listaddresslist { get; set; }

		/// <summary>
		/// FK_list_address_search_engines
		/// </summary>
		[Association(ThisKey="SearchEngineId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_list_address_search_engines", BackReferenceName="listaddresssearchengines")]
		public DictSearchEngines listaddresssearchengine { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="list_status")]
	public partial class ListStatus
	{
		[Column(@"id"),   PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column(@"name"), Nullable            ] public string Name { get; set; } // nvarchar(50)

		#region Associations

		/// <summary>
		/// FK_list_list_status_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StatusId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<List> listliststatus { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="osm_points")]
	public partial class OsmPoints
	{
		[Column(@"osm_id"),            Nullable] public string OsmId           { get; set; } // nvarchar(50)
		[Column(@"customer_point_id"), Nullable] public long?  CustomerPointId { get; set; } // bigint
		[Column(@"house_number"),      Nullable] public string HouseNumber     { get; set; } // nvarchar(255)
		[Column(@"road"),              Nullable] public string Road            { get; set; } // nvarchar(255)
		[Column(@"village"),           Nullable] public string Village         { get; set; } // nvarchar(255)
		[Column(@"town"),              Nullable] public string Town            { get; set; } // nvarchar(255)
		[Column(@"city"),              Nullable] public string City            { get; set; } // nvarchar(255)
		[Column(@"county"),            Nullable] public string County          { get; set; } // nvarchar(255)
		[Column(@"postcode"),          Nullable] public string Postcode        { get; set; } // nvarchar(255)
		[Column(@"country"),           Nullable] public string Country         { get; set; } // nvarchar(255)
		[Column(@"country_code"),      Nullable] public string CountryCode     { get; set; } // nvarchar(255)
		[Column(@"place_id"),          Nullable] public string PlaceId         { get; set; } // nvarchar(255)
		[Column(@"osm_type"),          Nullable] public string OsmType         { get; set; } // nvarchar(255)
		[Column(@"boundingbox"),       Nullable] public string Boundingbox     { get; set; } // nvarchar(255)
		[Column(@"polygonpoints"),     Nullable] public string Polygonpoints   { get; set; } // nvarchar(255)
		[Column(@"lat"),               Nullable] public string Lat             { get; set; } // nvarchar(255)
		[Column(@"lon"),               Nullable] public string Lon             { get; set; } // nvarchar(255)
		[Column(@"display_name"),      Nullable] public string DisplayName     { get; set; } // nvarchar(255)
		[Column(@"_class"),            Nullable] public string Class           { get; set; } // nvarchar(255)
		[Column(@"type"),              Nullable] public string Type            { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="v_customer_positions", IsView=true)]
	public partial class VCustomerPositions
	{
		[Column(@"point_id"),                Nullable] public long?        PointId            { get; set; } // bigint
		[Column(@"lat"),                     Nullable] public decimal?     Lat                { get; set; } // decimal(9, 7)
		[Column(@"lng"),                     Nullable] public decimal?     Lng                { get; set; } // decimal(9, 7)
		[Column(@"search_engine_status"),    Nullable] public string       SearchEngineStatus { get; set; } // nvarchar(50)
		[Column(@"formatted_address"),    NotNull    ] public string       FormattedAddress   { get; set; } // nvarchar(255)
		[Column(@"issued_market_id"),        Nullable] public long?        IssuedMarketId     { get; set; } // bigint
		[Column(@"processing_status"),       Nullable] public string       ProcessingStatus   { get; set; } // varchar(50)
		[Column(@"coordinates"),             Nullable] public SqlGeography Coordinates        { get; set; } // geography
		[Column(@"search_engine_id"),        Nullable] public int?         SearchEngineId     { get; set; } // int
		[Column(@"updated"),                 Nullable] public DateTime?    Updated            { get; set; } // datetime
		[Column(@"card_id"),              NotNull    ] public long         CardId             { get; set; } // bigint
		[Column(@"crm_customer_id"),      NotNull    ] public long         CrmCustomerId      { get; set; } // bigint
		[Column(@"street"),                  Nullable] public string       Street             { get; set; } // varchar(150)
	}

	public static partial class GeolocationDBStoredProcedures
	{
		#region GetUncheckedAddress

		public static IEnumerable<GetUncheckedAddressResult> GetUncheckedAddress(this DataConnection dataConnection)
		{
			return dataConnection.QueryProc<GetUncheckedAddressResult>("[dbo].[get_unchecked_address]");
		}

		public partial class GetUncheckedAddressResult
		{
			public long   card_id        { get; set; }
			public string source_address { get; set; }
		}

		#endregion

		#region PGetCountPointsByMarketStat

		public static IEnumerable<PGetCountPointsByMarketStatResult> PGetCountPointsByMarketStat(this DataConnection dataConnection, int? @market_google_coordinates_id, int? @radius)
		{
			return dataConnection.QueryProc<PGetCountPointsByMarketStatResult>("[dbo].[p_get_count_points_by_market_stat]",
				new DataParameter("@market_google_coordinates_id", @market_google_coordinates_id, DataType.Int32),
				new DataParameter("@radius",                       @radius,                       DataType.Int32));
		}

		public partial class PGetCountPointsByMarketStatResult
		{
			public int? qty { get; set; }
		}

		#endregion

		#region PGetPointsByMarketStat

		public static IEnumerable<PGetPointsByMarketStatResult> PGetPointsByMarketStat(this DataConnection dataConnection, int? @market_google_coordinates_id, int? @radius)
		{
			return dataConnection.QueryProc<PGetPointsByMarketStatResult>("[dbo].[p_get_points_by_market_stat]",
				new DataParameter("@market_google_coordinates_id", @market_google_coordinates_id, DataType.Int32),
				new DataParameter("@radius",                       @radius,                       DataType.Int32));
		}

		public partial class PGetPointsByMarketStatResult
		{
			public long?    google_point_id   { get; set; }
			public decimal? lat               { get; set; }
			public decimal? lng               { get; set; }
			public string   google_status     { get; set; }
			public string   formatted_address { get; set; }
			public decimal? km                { get; set; }
		}

		#endregion

		#region PGetCountPointsByMarketRadius

		public static IEnumerable<PGetCountPointsByMarketRadiusResult> PGetCountPointsByMarketRadius(this DataConnection dataConnection, int? @market_coordinates_id, int? @radius)
		{
			return dataConnection.QueryProc<PGetCountPointsByMarketRadiusResult>("[calc].[P_GetCountPointsByMarketRadius]",
				new DataParameter("@market_coordinates_id", @market_coordinates_id, DataType.Int32),
				new DataParameter("@radius",                @radius,                DataType.Int32));
		}

		public partial class PGetCountPointsByMarketRadiusResult
		{
			public int? qty { get; set; }
		}

		#endregion

		#region PGetPointsByMarketRadius

		public static IEnumerable<PGetPointsByMarketRadiusResult> PGetPointsByMarketRadius(this DataConnection dataConnection, int? @market_coordinates_id, int? @radius)
		{
			return dataConnection.QueryProc<PGetPointsByMarketRadiusResult>("[calc].[P_GetPointsByMarketRadius]",
				new DataParameter("@market_coordinates_id", @market_coordinates_id, DataType.Int32),
				new DataParameter("@radius",                @radius,                DataType.Int32));
		}

		public partial class PGetPointsByMarketRadiusResult
		{
			public long?    point_id             { get; set; }
			public decimal? lat                  { get; set; }
			public decimal? lng                  { get; set; }
			public string   search_engine_status { get; set; }
			public string   formatted_address    { get; set; }
			public decimal? km                   { get; set; }
		}

		#endregion

		#region PGetUnverifiedAddress

		public static IEnumerable<PGetUnverifiedAddressResult> PGetUnverifiedAddress(this DataConnection dataConnection)
		{
			return dataConnection.QueryProc<PGetUnverifiedAddressResult>("[calc].[P_GetUnverifiedAddress]");
		}

		public partial class PGetUnverifiedAddressResult
		{
			public long?  crm_customer_id   { get; set; }
			public string adress            { get; set; }
			public long?  pointId           { get; set; }
			public string processing_status { get; set; }
			public long?  card_id           { get; set; }
			public string region            { get; set; }
			public string district          { get; set; }
			public string city              { get; set; }
			public string street            { get; set; }
			public string house_number      { get; set; }
		}

		#endregion

		#region SetPointAddress

		public static int SetPointAddress(this DataConnection dataConnection, long? @card_id, string @lat, string @lng, string @google_status, string @formatted_address, string @xml)
		{
			return dataConnection.ExecuteProc("[dbo].[set_point_address]",
				new DataParameter("@card_id",           @card_id,           DataType.Int64),
				new DataParameter("@lat",               @lat,               DataType.NVarChar),
				new DataParameter("@lng",               @lng,               DataType.NVarChar),
				new DataParameter("@google_status",     @google_status,     DataType.NVarChar),
				new DataParameter("@formatted_address", @formatted_address, DataType.NVarChar),
				new DataParameter("@xml",               @xml,               DataType.NVarChar));
		}

		#endregion

		#region SpAlterdiagram

		public static int SpAlterdiagram(this DataConnection dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_alterdiagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32),
				new DataParameter("@version",     @version,     DataType.Int32),
				new DataParameter("@definition",  @definition,  DataType.VarBinary));
		}

		#endregion

		#region SpCreatediagram

		public static int SpCreatediagram(this DataConnection dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_creatediagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32),
				new DataParameter("@version",     @version,     DataType.Int32),
				new DataParameter("@definition",  @definition,  DataType.VarBinary));
		}

		#endregion

		#region SpDropdiagram

		public static int SpDropdiagram(this DataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_dropdiagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		#endregion

		#region SpHelpdiagramdefinition

		public static IEnumerable<SpHelpdiagramdefinitionResult> SpHelpdiagramdefinition(this DataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<SpHelpdiagramdefinitionResult>("[dbo].[sp_helpdiagramdefinition]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		public partial class SpHelpdiagramdefinitionResult
		{
			public int?   version    { get; set; }
			public byte[] definition { get; set; }
		}

		#endregion

		#region SpHelpdiagrams

		public static IEnumerable<SpHelpdiagramsResult> SpHelpdiagrams(this DataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<SpHelpdiagramsResult>("[dbo].[sp_helpdiagrams]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		public partial class SpHelpdiagramsResult
		{
			public string Database { get; set; }
			public string Name     { get; set; }
			public int    ID       { get; set; }
			public string Owner    { get; set; }
			public int    OwnerID  { get; set; }
		}

		#endregion

		#region SpRenamediagram

		public static int SpRenamediagram(this DataConnection dataConnection, string @diagramname, int? @owner_id, string @new_diagramname)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_renamediagram]",
				new DataParameter("@diagramname",     @diagramname,     DataType.NVarChar),
				new DataParameter("@owner_id",        @owner_id,        DataType.Int32),
				new DataParameter("@new_diagramname", @new_diagramname, DataType.NVarChar));
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region FnDiagramobjects

		[Sql.Function(Name="dbo.fn_diagramobjects", ServerSideOnly=true)]
		public static int? FnDiagramobjects()
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static DictDistricts Find(this ITable<DictDistricts> table, long DistrictId)
		{
			return table.FirstOrDefault(t =>
				t.DistrictId == DistrictId);
		}

		public static DictDistrictsCoordinates Find(this ITable<DictDistrictsCoordinates> table, long CoordinateId)
		{
			return table.FirstOrDefault(t =>
				t.CoordinateId == CoordinateId);
		}

		public static DictRegions Find(this ITable<DictRegions> table, long RegionId)
		{
			return table.FirstOrDefault(t =>
				t.RegionId == RegionId);
		}

		public static DictSearchEngines Find(this ITable<DictSearchEngines> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DictTradeMarkets Find(this ITable<DictTradeMarkets> table, int MarketId)
		{
			return table.FirstOrDefault(t =>
				t.MarketId == MarketId);
		}

		public static GoogleMarketCoordinates Find(this ITable<GoogleMarketCoordinates> table, int MarketGoogleCoordinatesId)
		{
			return table.FirstOrDefault(t =>
				t.MarketGoogleCoordinatesId == MarketGoogleCoordinatesId);
		}

		public static GoogleRequestLimit Find(this ITable<GoogleRequestLimit> table, long GoogleRequestLimitId)
		{
			return table.FirstOrDefault(t =>
				t.GoogleRequestLimitId == GoogleRequestLimitId);
		}

		public static List Find(this ITable<List> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ListAddress Find(this ITable<ListAddress> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ListStatus Find(this ITable<ListStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
